{"version":3,"sources":["scripts/app.js"],"names":["angular","module","runBlock","$rootScope","$log","app","sidebar","debug","$inject","run","routerConfig","$stateProvider","$locationProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","resolve","$title","$bodyClass","driverStandings","Ergast","getDriverStandings","season","$promise","then","response","errorMsg","warn","data","webDevTec","getTec","otherwise","html5Mode","routerRunBlock","$timeout","$state","$stateParams","getTitleValue","title","isFunction","getBodyClassValue","bodyClass","deregCallback","$on","$current","locals","globals","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","ErgastFactory","$resource","paramDefaults","round","query","actions","getSeasons","method","params","getSchedule","getResults","getQualifying","getConstructorStandings","getDrivers","getConstructors","getCircuits","getStatus","getLaps","getPitstops","factory","description","logo","key","this","service","SidebarController","$scope","$window","$cookies","getWidth","innerWidth","toggleSidebar","vm","toggle","put","mobileView","$watch","newValue","oldValue","isDefined","get","onresize","$apply","acmeNavbar","NavbarController","relativeDate","creationDate","fromNow","directive","restrict","scope","bindToController","acmeMalarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","contributors","contributor","login","MalarkeyController","githubContributor","activate","getContributors","info","template","link","$http","limit","getContributorsComplete","getContributorsFailed","error","toJson","apiHost","MainController","toastr","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","Math","random","DashboardController","driverStandingsList","MRData","StandingsTable","StandingsLists","DriverStandings","$templateCache"],"mappings":"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","file":"scripts/app-e3d2b45acf.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core', [\n\n\n      //  Angular Modules\n      // ------------------------------\n\n      'ngAnimate',\n      'ngAria',\n      'ngCookies',\n      'ngMessages',\n      'ngResource',\n      'ngSanitize',\n      'ngTouch',\n\n\n      //  3rd Party Modules\n      // ------------------------------\n\n      'ui.router',\n      'ui.bootstrap',\n      'toastr'\n\n  ]);\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($rootScope, $log) {\n\n    $rootScope.app = {\n      sidebar: true\n    };\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core')\n    .config(routerConfig)\n    .run(routerRunBlock);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $locationProvider, $urlRouterProvider) {\n\n\n\n\n    /* State Configurations\n    –––––––––––––––––––––––––––––––––––––––––––––––––– */\n    $stateProvider\n      .state('dashboard', {\n        url:          '/',\n        templateUrl:  'app/dashboard/dashboard.html',\n        controller:   'DashboardController',\n        controllerAs: 'dash',\n        resolve: {\n          $title: function() {\n            return 'Dashboard';\n          },\n          $bodyClass: function() {\n            return 'dashboard';\n          },\n          driverStandings: function(Ergast) {\n            return Ergast.getDriverStandings({season: '2016'}).$promise.then(function(response) {\n              return response;\n            }, function(errorMsg) {\n              $log.warn('Error:', errorMsg);\n            })\n          }\n        }\n      })\n      .state('home', {\n        url:          '/main',\n        templateUrl:  'app/main/main.html',\n        controller:   'MainController',\n        controllerAs: 'main',\n        resolve: {\n          $title: function() {\n            return 'Main';\n          },\n          $bodyClass: function() {\n            return 'main-page';\n          },\n          data: function(webDevTec) {\n            return webDevTec.getTec();\n          }\n        }\n      });\n\n\n\n\n    /* URL Router Configurations\n    –––––––––––––––––––––––––––––––––––––––––––––––––– */\n\n    $urlRouterProvider.otherwise('/');\n\n\n\n\n    /* HTML5 Mode\n    –––––––––––––––––––––––––––––––––––––––––––––––––– */\n\n    $locationProvider.html5Mode(true);\n\n\n  }\n\n\n  /**\n   * Allow `ui-router` to change `$rootScope` values\n   *\n   * @link https://github.com/nonplus/angular-ui-router-title\n   *\n   * @usage\n   * Using `$title`:\n   * ```\n   * <title ng-bind=\"($title || 'Home') + ' - My Application'\">My Application</title>\n   * ```\n   *\n   * `$title` value, each of which contains:\n   *    - `title` - state `$title`\n   *    - `state` - state name\n   *    - `stateParams` - state `$stateParams`\n   *\n   * > A state defines its title by declaring a `$title` value in its\n   * > resolve block. It's a good idea for the `$title` to include\n   * > information from the current state, so it may need to inject\n   * > the `$stateParam` or another value that was resolved from them.\n   *\n   * Specify `$title` in state definitions:\n   * ```\n   *\n   * $stateProvider\n   *   .state('home', {\n   *     ...\n   *     resolve: {\n   *       // Constant title\n   *       $title: function() { return 'Home'; }\n   *     }\n   *   })\n   *   .state('contacts', {\n   *     url: '/contacts',\n   *     ...\n   *     resolve: {\n   *       // List of contacts\n   *       contacts: ['Contacts', function(Contacts) {\n   *         // Use Contacts service to retrieve list\n   *         return Contacts.query();\n   *       }],\n   *       // Dynamic title showing number of contacts\n   *       $title: ['contacts', function(contacts) {\n   *         return 'Contacts (' + contacts.length + ')';\n   *       }]\n   *     }\n   *   })\n   *   .state('contact', {\n   *     url: '/contact/:contactId',\n   *     ...\n   *     resolve: {\n   *       // Single contact\n   *       contact: ['Contacts', '$stateParams', function(Contacts, $stateParams) {\n   *         // Use Contacts service to retrieve a contact\n   *         return Contacts.get({ id: $stateParams.contactId });\n   *       }],\n   *       // Dynamic title showing the name of contact\n   *       $title: ['contact', function(contact) {\n   *         return contact.name;\n   *       }]\n   *     }\n   *   })\n   *   .state('contact.edit', {\n   *     url: '/edit',\n   *     ...\n   *     resolve: {\n   *       // Dynamic title appending to parent state's title\n   *       $title: ['$title', function($title) {\n   *         return $title + \" (edit)\";\n   *       }]\n   *     }\n   *   })\n   * ```\n   */\n  /** @ngInject */\n  function routerRunBlock($log, $timeout, $rootScope, $state, $stateParams) {\n\n\n    //  Set reference to `$state` & `$stateParams`\n    // ------------------------------\n\n    $rootScope.$state       = $state;\n    $rootScope.$stateParams = $stateParams;\n\n\n    var deregCallback = $rootScope.$on('$stateChangeSuccess', function() {\n\n      // Retrieve values via accessor methods\n      var title     = getTitleValue($state.$current.locals.globals.$title);\n      var bodyClass = getBodyClassValue($state.$current.locals.globals.$bodyClass);\n\n      // Set references in `$rootScope`\n      $timeout(function() {\n        $rootScope.$title     = title;\n        $rootScope.$bodyClass = bodyClass;\n      });\n\n    });\n\n    $rootScope.$on('$destroy', deregCallback);\n\n\n    //  Accessor method for `title`\n    // ------------------------------\n\n    function getTitleValue(title) {\n      return angular.isFunction(title) ? title() : title;\n    }\n\n\n    //  Accessor method for `bodyClass`\n    // ------------------------------\n\n    function getBodyClassValue(bodyClass) {\n      return angular.isFunction(bodyClass) ? bodyClass() : bodyClass;\n    }\n\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.core')\n    .factory('Ergast', ErgastFactory);\n\n  /**\n   * Angular-Resource data service for Ergast Developer API\n   *\n   * @usage\n   * ```js\n   * // This retrieves the race results for Round 1 of 2012:\n   * var params = {\n   *   season: '2012',\n   *   round: '1',\n   *   query: 'results'\n   * };\n   * Ergast.get(params).$promise.then(function(response) {\n   *   $log.info(response);\n   * }, function(errorMsg) {\n   *   $log.error(errorMsg);\n   * });\n   * ```\n   *\n   * @see https://docs.angularjs.org/api/ngResource/service/$resource\n   * @see https://docs.angularjs.org/api/ng/service/$http\n   * @see http://ergast.com/mrd/\n   */\n  /** @ngInject */\n  function ErgastFactory($resource) {\n\n    // Base URL for `$resource` object\n    // ------------------------------\n\n    var url = 'http://ergast.com/api/f1/:season/:round/:query.json';\n\n    // Default parameters for `$resource` object\n    // ------------------------------\n\n    var paramDefaults = {\n      season: '@season',\n      round:  '@round',\n      query:  '@query'\n      //limit:  '30',   // Default: 30; Maximum: 1000\n      //offset: '0'     // Default: 0\n    };\n\n    // Custom actions for `$resource` object\n    // ------------------------------\n\n    var actions = {};\n\n\n    // Query Seasons\n    // ------------------------------\n\n    actions.getSeasons = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'seasons'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/seasons.json'\n    };\n\n\n    // Query Schedule\n    // ------------------------------\n\n    actions.getSchedule = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'schedule'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/schedule.json'\n    };\n\n\n    // Query Results\n    // ------------------------------\n\n    actions.getResults = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'results'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/results.json'\n    };\n\n\n    // Query Qualifying\n    // ------------------------------\n\n    actions.getQualifying = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'qualifying'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/qualifying.json'\n    };\n\n\n    // Query DriverStandings\n    // ------------------------------\n\n    actions.getDriverStandings = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'driverStandings'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/driverStandings.json'\n    };\n\n\n    // Query ConstructorStandings\n    // ------------------------------\n\n    actions.getConstructorStandings = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'constructorStandings'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/constructorStandings.json'\n    };\n\n\n    // Query Drivers\n    // ------------------------------\n\n    actions.getDrivers = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'drivers'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/drivers.json'\n    };\n\n\n    // Query Constructors\n    // ------------------------------\n\n    actions.getConstructors = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'constructors'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/constructors.json'\n    };\n\n\n    // Query Circuits\n    // ------------------------------\n\n    actions.getCircuits = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'circuits'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/circuits.json'\n    };\n\n\n    // Query Status\n    // ------------------------------\n\n    actions.getStatus = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'status'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/status.json'\n    };\n\n\n    // Query Laps\n    // ------------------------------\n\n    actions.getLaps = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'laps'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/laps.json'\n    };\n\n\n    // Query Pitstops\n    // ------------------------------\n\n    actions.getPitstops = {\n      method: 'GET',\n      params: {\n        season: '@season',\n        round:  '@round',\n        query:  'pitstops'\n      }//,\n      //url: 'http://ergast.com/api/f1/:season/:round/pitstops.json'\n    };\n\n    return $resource(url, paramDefaults, actions);\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.components', []);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('gpquery.components')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      },\n      {\n        'title': 'Sass (Node)',\n        'url': 'https://github.com/sass/node-sass',\n        'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\n        'logo': 'node-sass.png'\n      },\n      {\n        'key': 'jade',\n        'title': 'Jade',\n        'url': 'http://jade-lang.com/',\n        'description': 'Jade is a high performance template engine heavily influenced by Haml and implemented with JavaScript for node.',\n        'logo': 'jade.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.components')\n    .controller('SidebarController', SidebarController);\n\n  /** @ngInject */\n  function SidebarController($scope, $window, $cookies, $rootScope) {\n    var vm = this;\n    /**\n     * Sidebar Toggle & Cookie Control\n     */\n    var mobileView = 992;\n\n    vm.getWidth = getWidth;\n    vm.toggleSidebar = toggleSidebar;\n\n    $scope.$watch(vm.getWidth, function(newValue, oldValue) {\n      if (newValue >= mobileView) {\n        if (angular.isDefined($cookies.get('toggle'))) {\n          vm.toggle = ! $cookies.get('toggle') ? false : true;\n        } else {\n          vm.toggle = true;\n        }\n      } else {\n        vm.toggle = false;\n      }\n      $rootScope.app.sidebar = vm.toggle;\n    });\n\n    $window.onresize = function() {\n        $scope.$apply();\n    };\n\n    function getWidth() {\n      return $window.innerWidth;\n    }\n\n    function toggleSidebar() {\n      vm.toggle = !vm.toggle;\n      $rootScope.app.sidebar = vm.toggle;\n      $cookies.put('toggle', vm.toggle);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.components')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.components')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.components')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery', [\n\n      'gpquery.core',\n      'gpquery.components',\n\n      'gpquery.dashboard'\n\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, toastr, data) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1481757100966;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = data;\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.dashboard', []);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('gpquery.dashboard')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController(driverStandings) {\n    var vm = this;\n\n    activate();\n\n    function activate() {\n      getDriverStandings();\n    }\n\n    function getDriverStandings() {\n      vm.driverStandingsList = driverStandings.MRData.StandingsTable.StandingsLists[0].DriverStandings;\n    }\n\n  }\n\n})();\n\nangular.module(\"gpquery\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><div><acme-navbar creation-date=main.creationDate></acme-navbar></div><div class=\\\"jumbotron text-center\\\"><h1>\\'Allo, \\'Allo!</h1><p class=lead><img src=assets/images/yeoman.png alt=\\\"I\\'m Yeoman\\\"><br>Always a pleasure scaffolding your apps.</p><p class=\\\"animated infinite\\\" ng-class=main.classAnimation><button type=button class=\\\"btn btn-lg btn-success\\\" ng-click=main.showToastr()>Splendid Toastr</button></p><p>With ♥ thanks to the contributions of<acme-malarkey extra-values=\\\"[\\'Yeoman\\', \\'Gulp\\', \\'Angular\\']\\\"></acme-malarkey></p></div><div class=row><div class=\\\"col-sm-6 col-md-4\\\" ng-repeat=\\\"awesomeThing in main.awesomeThings | orderBy:\\'rank\\'\\\"><div class=thumbnail><img class=pull-right ng-src=\\\"assets/images/{{ awesomeThing.logo }}\\\" alt=\\\"{{ awesomeThing.title }}\\\"><div class=caption><h3>{{ awesomeThing.title }}</h3><p>{{ awesomeThing.description }}</p><p><a ng-href={{awesomeThing.url}}>{{ awesomeThing.url }}</a></p></div></div></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=https://github.com/Swiip/generator-gulp-angular><span class=\\\"glyphicon glyphicon-home\\\"></span> Gulp Angular</a></div><div class=\\\"collapse navbar-collapse\\\" id=bs-example-navbar-collapse-6><ul class=\\\"nav navbar-nav\\\"><li class=active><a ng-href=#>Home</a></li><li><a ng-href=#>About</a></li><li><a ng-href=#>Contact</a></li></ul><ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>\");\n$templateCache.put(\"app/dashboard/dashboard.html\",\"<div class=container-fluid><div class=row><div ng-repeat=\\\"driver in dash.driverStandingsList | orderBy: \\'driver.position\\'\\\" class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>{{driver.position}} {{driver.Driver.givenName}} {{driver.Driver.familyName}}</div><div class=panel-body>{{driver.points}}</div></div></div></div></div>\");}]);"],"sourceRoot":"/source/"}